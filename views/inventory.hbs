<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">

    <link rel="stylesheet" href="/style.css">
    <title>Document</title>
</head>
<body>
    <div id="spinner" style="display:none;">
        <div class="spinner-border" role="status">
            <span class="sr-only"></span>
        </div>
    </div>

    <nav>
        <h4 style="font-size:13px">Logo Placeholder</h4>
        <ul>
            <li><a href="/dashboard">Home</a></li>
            <li><a href="/inventory">Inventory</a></li>
            <li><a href="/dashboard">Pricing</a></li>
            <li><a href="/dashboard">Orders</a></li>
            <li><a href="/dashboard">Messages</a></li>
            <li><a href="/dashboard">Feedback</a></li>
            <li><a href="/dashboard">Payments</a></li>
            <li><a href="/dashboard">Reports</a></li>
        </ul>
    </nav>
    <h4>{{username}} Inventory</h4>
    <div class="inventorySearch">
        <form action="/inventory" method="get">
            <div>
                <label for="searchTerm">Search by Name:</label>
                <input type="text" id="searchTerm" name="searchTerm" class="filter-input" placeholder="Player Name" value="{{searchTerm}}">
            </div>
            <div>
                <label for="sport">Sport:</label>
                <select id="sport" name="sport" class="filter-input" onchange="loadSetsAndYears()">
                    <option value="">All Sports</option>
                    {{#each sports}}
                    <option value="{{this}}">{{this}}</option>
                    {{/each}}
                </select>
            </div>
            <div class="dropdown">
                <label for="cardSet">Card Set:</label>
                <input type="text" id="cardSetSearch" placeholder="Search sets..." onkeyup="filterCardSets()" />
                <div class="dropdown-content">
                    <select id="cardSet" name="cardSet" class="filter-input">
                        <option value="">All Sets</option>
                        {{#each cardSets}}
                        <option value="{{this}}" {{#if (eq this ../cardSet)}}selected{{/if}}>{{this}}</option>
                        {{/each}}
                    </select>
                </div>
            </div>

            <div>
                <label for="cardYear">Card Year:</label>
                <select id="cardYear" name="cardYear" class="filter-input">
                    <option value="">All Years</option>
                    {{#each cardYears}}
                    <option value="{{this}}" {{#if (eq this ../cardYear)}}selected{{/if}}>{{this}}</option>
                    {{/each}}
                </select>
            </div>
            <div>
                <button type="submit">Search</button>
            </div>
        </form>
    </div>

<div class="table-container">
    <table>
        <!-- Table Title and Results as Caption -->
        <caption>
            <div class="table-header">
                <h2>Product Catalog</h2>
                <span>{{totalItems}} Results</span>
            </div>
        </caption>

        <thead>
            <tr>
                <th>Sport</th>
                <th>CardImage</th>
                <th>CardName</th>
                <th>CardSet</th>
                <th>CardYear</th>
                <th>CardNumber</th>
                <th>CardColor</th>
                <th>CardVariant</th>
            </tr>
        </thead>
        <tbody>
            {{#each cards}}
            <tr>
                <td>{{this.Sport}}</td>
                <td><img src="{{this.CardImage}}" alt="Card Image"></td>
                <td>{{this.CardName}}</td>
                <td>{{this.CardSet}}</td>
                <td>{{this.CardYear}}</td>
                <td>{{this.CardNumber}}</td>
                <td>{{this.CardColor}}</td>
                <td>{{this.CardVariant}}</td>
            </tr>            
            {{else}}
            <tr><td colspan="8">No cards found</td></tr>
            {{/each}}
        </tbody>
    </table>

    <nav aria-label="Page navigation" class="pagination-bottom">
        <ul class="pagination">
            {{#if showPrevious}}
            <li class="page-item"><a class="page-link" href="?page={{minus currentPage 1}}">Previous</a></li>
            {{/if}}
            {{#if showNext}}
            <li class="page-item"><a class="page-link" href="?page={{plus currentPage 1}}">Next</a></li>
            {{/if}}

        </ul>
    </nav>
</div>

<script>
    function loadSetsAndYears(caller) {
        // Disable the dropdowns while loading
        document.getElementById('sport').disabled = true;
        document.getElementById('cardSet').disabled = true;
        document.getElementById('cardYear').disabled = true;
        document.getElementById('spinner').style.display = 'flex';

        const sport = document.getElementById('sport').value;
        const cardSet = document.getElementById('cardSet').value;
        const year = document.getElementById('cardYear').value;

        // Fetch sports based on card set and year
        fetch(`/sports?cardSet=${encodeURIComponent(cardSet)}&year=${encodeURIComponent(year)}`)
            .then(response => response.json())
            .then(sports => {
                const sportSelect = document.getElementById('sport');
                sportSelect.innerHTML = '<option value="">All Sports</option>';
                sports.forEach(sportItem => {
                    const option = document.createElement('option');
                    option.value = sportItem;
                    option.textContent = sportItem;
                    if (sportItem === sport) {
                        option.selected = true;
                    }
                    sportSelect.appendChild(option);
                });
            })
            .catch(error => console.error('Error loading sports:', error));


        // Fetch card sets based on sport and year
        fetch(`/cardsets?sport=${encodeURIComponent(sport)}&year=${encodeURIComponent(year)}`)
            .then(response => response.json())
            .then(sets => {
                const setSelect = document.getElementById('cardSet');
                setSelect.innerHTML = '<option value="">All Sets</option>';
                sets.forEach(setItem => {
                    const option = document.createElement('option');
                    option.value = setItem;
                    option.textContent = setItem;
                    if (setItem === cardSet) {
                        option.selected = true;
                    }
                    setSelect.appendChild(option);
                });
            })
            .catch(error => console.error('Error loading card sets:', error));


        // Fetch years based on sport and card set
        fetch(`/years?sport=${encodeURIComponent(sport)}&cardSet=${encodeURIComponent(cardSet)}`)
            .then(response => response.json())
            .then(years => {
                const yearSelect = document.getElementById('cardYear');
                yearSelect.innerHTML = '<option value="">All Years</option>';
                years.forEach(yearItem => {
                    const option = document.createElement('option');
                    option.value = yearItem;
                    option.textContent = yearItem;
                    if (yearItem === year) {
                        option.selected = true;
                    }
                    yearSelect.appendChild(option);
                });
            })
            .catch(error => console.error('Error loading years:', error))
            .finally(() => {
                // Re-enable dropdowns and hide spinner after fetching is complete
                document.getElementById('sport').disabled = false;
                document.getElementById('cardSet').disabled = false;
                document.getElementById('cardYear').disabled = false;
                document.getElementById('spinner').style.display = 'none';
            });

    }

    // JavaScript function to filter card set options
    function filterCardSets() {
        var input, filter, ul, li, a, i;
        input = document.getElementById('cardSetSearch');
        filter = input.value.toUpperCase();
        var select = document.getElementById("cardSet");
        var options = select.getElementsByTagName('option');

        for (i = 1; i < options.length; i++) { // Start from 1 to skip the placeholder option
            txtValue = options[i].textContent || options[i].innerText;
            if (txtValue.toUpperCase().indexOf(filter) > -1) {
                options[i].style.display = "";
            } else {
                options[i].style.display = "none";
            }
        }
    }




    // Modify event listeners to include the caller (sport or set)
    document.getElementById('sport').addEventListener('change', () => loadSetsAndYears('sport'));
    document.getElementById('cardSet').addEventListener('change', () => loadSetsAndYears('set'));
    document.getElementById('cardYear').addEventListener('change', () => loadSetsAndYears('year'));



</script>

</body>