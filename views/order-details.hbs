<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="stylesheet" href="/style.css">
    <title>Document</title>
</head>
<body>
    <nav>
        <h4 style="font-size:13px">Logo Placeholder</h4>
        <ul>
            <li><a href="/dashboard">Home</a></li>
            <li><a href="/inventory">Inventory</a></li>
            <li><a href="/quick-list-inventory">Quick-List</a></li>
            <li><a href="/orders">Orders</a></li>
            <li><a href="/messages">Messages</a></li>
            <li><a href="/dashboard">Feedback</a></li>
            <li><a href="/dashboard">Payments</a></li>
            <li><a href="/dashboard">Reports</a></li>
            <li><a href="/logout">Logout</a></li>
        </ul>
    </nav>
    <!-- Order Summary -->
<div class="order-container">
    <div class="order-detail-box">
        <h4>Order Info</h4>
        <div class="info-row">
            <div class="info-label">Order Number:</div>
            <div class="info-data">{{order.OrderNumber}}</div>
        </div>
        <div class="info-row">
            <div class="info-label">Status:</div>
            <div class="info-data">{{shipping.ShipmentStatus}}</div>
        </div>
        <div class="info-row">
            <div class="info-label">Order Date:</div>
            <div class="info-data">{{formatDate order.OrderDate}}</div>
        </div>
        <div class="info-row">
            <div class="info-label">Contact Buyer:</div>
            <div class="info-data">
                <button class="table-button" id="contactBuyerBtn">Contact Buyer</button>
            </div>
        </div>

    </div>

    <div class="shipping-box">
        <h4>Shipping Address</h4>
        <div class="info-row">
            <div>
                {{order.Username}}<br>
                {{address.Street}}<br>
                {{address.City}}, {{address.State}} {{address.ZipCode}}<br>
            </div>
        </div>
    </div>
    <div class="order-detail-box">
        <h4>Payment Details</h4>
        <div class="info-row">
            <div class="info-label">Product Amount:</div>
            <div class="info-data">${{order.SalePrice}}</div>
        </div>
        <div class="info-row">
            <div class="info-label">Shipping Cost:</div>
            <div class="info-data">${{order.ShippingPrice}}</div>
        </div>
        <div class="info-row">
            <div class="info-label">Order Amount:</div>
            <div class="info-data" style="font-weight: bold;">${{order.OrderAmount}}</div>
        </div>
        <div class="info-row">
            <div class="info-label">Fee Amount:</div>
            <div class="info-data">${{order.FeeAmount}}</div>
        </div>
        <div class="info-row">
            <div class="info-label">Net Amount:</div>
            <div class="info-data">${{order.NetAmount}}</div>
        </div>
    </div>

    <div class="order-detail-box">
        <h4>Shipping Info</h4>
        <div class="info-row">
            <div class="info-label">Shipping Method:</div>
            <div class="info-data">
                <button class="table-button" id="shipWithoutTrackingBtn">Ship Without Tracking</button>
            </div>
        </div>
        <div class="info-row" id="trackingNumberInputRow">
            <div class="info-label">Tracking Number</div>
            <div class="info-data">
                <input type="text" id="trackingNumberInput" placeholder="Tracking Number">
                <button class="table-button" id="submitTrackingBtn">Save</button>
            </div>
        </div>
        <div class="info-row">
            <div class="info-label">Shipment Date:</div>
            <div class="info-data">{{formatDate shipping.ShipmentDate}}</div>
        </div>
        <div class="info-row">
            <div class="info-label">Estimated Delivery Date:</div>
            <div class="info-data">{{formatDate shipping.EstimatedDeliveryDate}}</div>
        </div>
        <div class="info-row">
            <div class="info-label">Status:</div>
            <div class="info-data"><span class="{{statusColor shipping.ShipmentStatus}}">{{shipping.ShipmentStatus}}</span></div>
        </div>
    </div>

    <div class="shipping-box">
        <h4>Feedback</h4>
        {{#if feedback}}
            <div class="info-row">
                <div class="info-label">Rating:</div>
                <div class="info-data">{{feedback.Rating}}</div>
            </div>
            <div class="info-row">
                <div class="info-label">Feedback:</div>
                <div class="info-data">{{feedback.FeedbackText}}</div>
            </div>
            <div class="info-row">
                <div class="info-label">Date:</div>
                <div class="info-data">{{formatDate feedback.FeedbackDate}}</div>
            </div>
        {{else}}
            <div class="info-data">The buyer has not left feedback</div>
        {{/if}}
    </div>

    <div class="refund-cancel-box">
        <h4>Refunds</h4>
        <div style="text-align: center;">
            <button style="width: 50%; margin-top: 8px; margin-bottom: 8px;" type="button" onclick="window.location.href='/order-details?ordernumber={{OrderNumber}}'" class="table-button">Partial Refund</button>
            <button style="width: 50%;" type="button" onclick="window.location.href='/order-details?ordernumber={{OrderNumber}}'" class="table-button">Full Refund</button>
        </div>
    </div>
</div>


    <!-- Itemized List -->
    <table >
        <thead>
            <tr>
                <th>Card Details</th>
                <th>Quantity</th>
                <th>Price per Item</th>
            </tr>
        </thead>
        <tbody >
            {{#each items}}
            <tr>
                <td class="card-details">{{CardDetails}}</td>
                <td>{{Quantity}}</td>
                <td>${{Price}}</td>
            </tr>
            {{/each}}
        </tbody>
        <tfoot>
            <th colspan="2"> Total Price</th>
            <th>${{order.SalePrice}}</th>
        </tfoot>
    </table>

</body>
<script>
    function detectCarrierAndGenerateTrackingInfo(trackingNumber) {
        const uspsRegex = /^((94|93|92|94|95)\d{20}|(70|14|23|03)\d{14}|(M0|82)\d{8})$/;
        const upsRegex = /^1Z[0-9A-Z]{16}$/;
        const fedExRegex = /^[0-9]{12,14}$/;

        let trackingInfo = {
            carrier: "",
            url: ""
        };

        if (uspsRegex.test(trackingNumber)) {
            trackingInfo.carrier = "USPS";
            trackingInfo.url = `https://tools.usps.com/go/TrackConfirmAction.action?tLabels=${trackingNumber}`;
        } else if (upsRegex.test(trackingNumber)) {
            trackingInfo.carrier = "UPS";
            trackingInfo.url = `https://www.ups.com/track?tracknum=${trackingNumber}`;
        } else if (fedExRegex.test(trackingNumber)) {
            trackingInfo.carrier = "FedEx";
            trackingInfo.url = `https://www.fedex.com/fedextrack/?tracknumbers=${trackingNumber}`;
        } else {
            console.log("Carrier not detected or unsupported tracking number format.");
        }

        return trackingInfo;
    }


    document.getElementById('shipWithoutTrackingBtn').addEventListener('click', function() {
        const estimatedDeliveryDate = new Date();
        estimatedDeliveryDate.setDate(estimatedDeliveryDate.getDate() + 12); // Example: 12-15 days from now for no tracking

        const data = {
            orderNumber: window.location.search.split('=')[1], // Extract orderNumber from URL
            ShippedWithTracking: false,
            TrackingNumber: null,
            EstimatedDeliveryDate: estimatedDeliveryDate.toISOString().split('T')[0],
            Carrier: null,
            CarrierTrackingURL: null,
            ShipmentStatus: 'Shipped'
        };

        // Change the button color to indicate selection
        this.style.backgroundColor = "#4CAF50"; // Example: green color for "active" or "selected"
        this.style.color = "white"; // Change text color for better readability
        this.disabled = true; // Optional: disable the button after selection

        // Reset the tracking input field and button styles if they were previously used
        document.getElementById('trackingNumberInput').value = '';
        document.getElementById('submitTrackingBtn').style.backgroundColor = ""; // Reset to default style
        document.getElementById('submitTrackingBtn').style.color = ""; // Reset to default text color

        updateOrder(data);
    });


    document.getElementById('submitTrackingBtn').addEventListener('click', function() {
        const trackingNumber = document.getElementById('trackingNumberInput').value;
        if (!trackingNumber) {
            alert('Please enter a tracking number or use "Ship Without Tracking".');
            return;
        }

        const trackingInfo = detectCarrierAndGenerateTrackingInfo(trackingNumber);
        const estimatedDeliveryDate = new Date();
        estimatedDeliveryDate.setDate(estimatedDeliveryDate.getDate() + 3); // Example: 3-7 days from now for tracking

        const data = {
            orderNumber: window.location.search.split('=')[1],
            ShippedWithTracking: true,
            TrackingNumber: trackingNumber,
            EstimatedDeliveryDate: estimatedDeliveryDate.toISOString().split('T')[0],
            Carrier: trackingInfo.carrier,
            CarrierTrackingURL: trackingInfo.url,
            ShipmentStatus: 'Shipped'
        };

        updateOrder(data);
    });



    // Function to send data to server
    function updateOrder(data) {
        // Inside your updateOrder function
        fetch('/update-shipping-details', { // Updated path to match server-side
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
        })
        .then(response => response.json())
        .then(data => {
            console.log('Success:', data);
        })
        .catch((error) => {
            console.error('Error:', error);
        });
    }
    // On page load or when the form is initialized
    document.addEventListener('DOMContentLoaded', () => {
        const trackingNumber = localStorage.getItem('trackingNumber');
        if (trackingNumber) {
            document.getElementById('trackingNumberInput').value = trackingNumber;
            // Optionally, display the tracking number section
            document.getElementById('trackingNumberRow').style.display = 'block';
            document.getElementById('trackingNumberLink').textContent = trackingNumber;
            // Update the tracking URL based on the stored tracking number
            const trackingInfo = detectCarrierAndGenerateTrackingInfo(trackingNumber);
            document.getElementById('trackingNumberLink').href = trackingInfo.url;
        }
    });

    document.getElementById('contactBuyerBtn').addEventListener('click', function() {
        const orderId = '{{order.OrderNumber}}'; // Make sure you have the order ID available
        const buyerId = '{{order.BuyerID}}'; // Assume you have buyer ID
        const sellerId = '{{user.id}}'; // Assume you have seller ID

        fetch('/create-or-find-conversation', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ orderId, buyerId, sellerId })
        })
        .then(response => response.json())
        .then(data => {
            if (data.conversationId) {
                window.location.href = `/message-details/${data.conversationId}`; // Redirect to the conversation details page
            } else {
                alert('Failed to create or find conversation');
            }
        })
        .catch(error => console.error('Error:', error));
    });


</script>
</html>
