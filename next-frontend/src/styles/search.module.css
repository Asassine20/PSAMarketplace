.mainContent {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 20px;
  max-width: calc(100% - 40px); /* Adjust based on the padding to ensure full width */
}

.controlSection {
  width: calc(100% - 40px); /* Adjust this width to compensate for mainContent padding */
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-top: 5px;
  padding-bottom: 10px;
  margin-bottom: 30px;
  position: sticky;
  top: 0;
  z-index: 10;
  /* Adding border-bottom to the pseudo-element instead */
}

.controlSection::before {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  margin-bottom: -10px;
  border-bottom: 1px solid #ccc; /* Sharp and thin line */
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.3);
  width: 100vw; /* Stretch to the full viewport width */
  margin-left: calc(-50vw + 50%); /* Centering the line based on viewport */
}

/* Adjust the filter section and container */
.filterAndCardsContainer, .filterSection, .cardsSection {
  width: 100%; /* Ensuring these elements take up full width */
}

.filterAndCardsContainer {
  display: flex;
  width: 95%;
  gap: 20px;
  position: relative;
}

.filterSection {
  display: block;
  width: 200px;
  padding: 10px;
  border-right: 1px solid #ccc;
  transition: all 0.3s ease-in-out;
  position: relative;
}

.filterCategory {
  max-height: 150px; /* Adjust based on your needs */
  overflow-y: auto; /* Enables vertical scrolling within the category */
  padding: 4px 0; /* Adds some vertical padding within the category */
  border-bottom: 1px solid #ccc; /* Optional: adds a separator between categories */
  margin-bottom: 8px; /* Optional: adds some space between categories */
}

.filterVisible {
  display: block !important; /* Override any other display settings */
}

.closeFilterButton {
  position: absolute;
  top: 10px;
  right: 10px;
  cursor: pointer;
  background-color: transparent; /* Remove background color */
  color: grey; /* Set text color */
  border: none;
  font-size: 16px;
  padding: 5px 10px;
}

@media (min-width: 1201px) {
  .filterAndCardsContainer {
    display: flex;
    flex-direction: row;
    gap: 20px; /* Adjust the gap between the filter section and the cards section as needed */
  }

  .filterSection {
    display: block; /* Ensure the filter section is always displayed */
    width: 200px; /* Adjust the width of the filter section as needed */
    padding: 0; /* Remove padding from the filter section specifically */
    border-right: 1px solid #ccc; /* A border to separate the filter section from the cards section */
    transition: all 0.3s ease-in-out;
    position: sticky;
    top: 0; /* Makes the filter section stick to the top when scrolling */
    height: auto; /* Adjust height automatically based on the content */
  }

  /* Only target the .filterAndCardsContainer for width adjustments, don't remove padding here */
  .filterAndCardsContainer {
    width: 100%; /* Adjust the width to take up the full width of its container */
  }
}


@media (max-width: 1200px) {
  .filterToggleButton {
    display: block;
    position: fixed;
    top: 10px;
    left: 20px;
    z-index: 30; /* Ensure toggle button is above the filter section */
  }

  .filterSection {
    position: fixed; /* or absolute, depending on your layout needs */
    top: 0; /* Adjust as needed */
    left: 0; /* Adjust as needed */
    width: 200px; /* or whatever width you prefer */
    height: 100%; /* Take up full viewport height, adjust as needed */
    background-color: white; /* or any color you prefer */
    overflow-y: auto; /* In case of scrolling */
    z-index: 20; /* Higher than cardsSection */
    display: none; /* Initially hidden */
  }

  .filterVisible {
    display: block; /* Show filter section */
  }
}

.cardsSection {
  width: 100%;
}

/* Cards grid layout */
.cardsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  gap: 20px;
}

.card {
  width: 100%;
  height: 350px;
  display: flex;
  background-color: #f3f3f3;
  box-shadow: 0 4px 6px rgba(0,0,0,0.1);
  border-radius: 8px;
  overflow: hidden;
  cursor: pointer;
}
.card:hover {
  transform: scale(1.05);
  transition: transform 0.2s ease-in-out;
}

.cardImageWrapper {
  width: 200px;
  height: 335px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.cardImage {
  border-radius: 8px;
  width: 200px;
  height: 335px;
  object-fit: cover;
}

.cardInfo {
  flex: 1;
  padding-left: 20px;
  margin-top: 30px;
  padding-bottom: 200px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  text-align: left;
}

.cardName, .cardSport, .cardSet, .cardYear, .cardColor, .cardVariant {
  display: block;
  margin-top: 5px;
  margin-bottom: 5px;
}


.cardName {
  font-weight: bold;
}

/* Pagination styles */
.pagination {
  display: flex;
  justify-content: center;
  margin-top: 20px;
}

.pagination button {
  padding: 10px 20px;
  margin: 0 5px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.pagination button:hover {
  background-color: #0056b3;
}

.pagination button:disabled {
  background-color: #cccccc;
  cursor: not-allowed;
}

.fullPageOverlay {
  position: fixed; /* Or 'absolute' if the parent is positioned */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(255, 255, 255, 0.5); /* Light overlay */
  z-index: 1000; /* Ensure it's above other content */
}

.spinner {
  border: 4px solid rgba(0, 0, 0, .1);
  border-radius: 50%;
  border-top-color: #3498db; /* Use your color */
  width: 50px;
  height: 50px;
  -webkit-animation: spin 2s linear infinite; /* Safari */
  animation: spin 2s linear infinite;
}

@-webkit-keyframes spin { /* Safari */
  0% { -webkit-transform: rotate(0deg); }
  100% { -webkit-transform: rotate(360deg); }
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
.centeredContent {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%; /* Or a specific height as needed */
}
.toggleSwitchContainer {
  display: flex;
  flex-direction: column;
  align-items: flex-start; /* Aligns the switch to the left */
  margin-bottom: 15px; /* Adds some space between the toggle and the next filter */
}

.toggleLabel {
  margin-bottom: 5px; /* Space between the label and the switch */
}

/* Ensure your existing .switch and .round styles apply */
.switch {
position: relative;
display: inline-block;
width: 60px;
height: 34px;
}

.switch input { 
opacity: 0;
width: 0;
height: 0;
}

.slider {
position: absolute;
cursor: pointer;
top: 0;
left: 0;
right: 0;
bottom: 0;
background-color: #ccc;
-webkit-transition: .4s;
transition: .4s;
}

.slider:before {
position: absolute;
content: "";
height: 26px;
width: 26px;
left: 4px;
bottom: 4px;
background-color: white;
-webkit-transition: .4s;
transition: .4s;
}

input:checked + .slider {
background-color: #2196F3;
}

input:focus + .slider {
box-shadow: 0 0 1px #2196F3;
}

input:checked + .slider:before {
-webkit-transform: translateX(26px);
-ms-transform: translateX(26px);
transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
border-radius: 34px;
}

.slider.round:before {
border-radius: 50%;
}
